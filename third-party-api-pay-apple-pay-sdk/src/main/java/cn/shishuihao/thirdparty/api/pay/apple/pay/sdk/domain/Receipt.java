package cn.shishuihao.thirdparty.api.pay.apple.pay.sdk.domain;

import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Getter;
import lombok.ToString;
import lombok.extern.jackson.Jacksonized;

/**
 * The decoded version of the encoded receipt data sent
 * with the request to the App Store.
 *
 * @author shishuihao
 * @version 1.0.0
 */
@Jacksonized
@ToString
@Builder
@Getter
public class Receipt {
    /**
     * See app_item_id.
     */
    @JsonProperty("adam_id")
    private final Long adamId;
    /**
     * Generated by App Store Connect and used by
     * the App Store to uniquely identify the app purchased.
     * Apps are assigned this identifier only in production.
     * Treat this value as a 64-bit long integer.
     */
    @JsonProperty("app_item_id")
    private final Long appItemId;
    /**
     * The app’s version number.
     * The app's version number corresponds to
     * the value of CFBundleVersion (in iOS)
     * or CFBundleShortVersionString (in macOS) in the Info.plist.
     * In production,
     * this value is the current version of the app on
     * the device based on the receipt_creation_date_ms.
     * In the sandbox,
     * the value is always "1.0".
     */
    @JsonProperty("application_version")
    private final String applicationVersion;
    /**
     * The bundle identifier for the app to which the receipt belongs.
     * You provide this string on App Store Connect.
     * This corresponds to the value of CFBundleIdentifier
     * in the Info.plist file of the app.
     */
    @JsonProperty("bundle_id")
    private final String bundleId;
    /**
     * A unique identifier for the app download transaction.
     */
    @JsonProperty("download_id")
    private final Long downloadId;
    /**
     * The time the receipt expires for apps purchased through
     * the Volume Purchase Program,
     * in a date-time format similar to the ISO 8601.
     */
    @JsonProperty("expiration_date")
    private final String expirationDate;
    /**
     * The time the receipt expires for apps purchased through
     * the Volume Purchase Program,
     * in UNIX epoch time format,
     * in milliseconds.
     * If this key is not present for apps purchased through
     * the Volume Purchase Program,
     * the receipt does not expire.
     * Use this time format for processing dates.
     */
    @JsonProperty("expiration_date_ms")
    private final String expirationDateMs;
    /**
     * The time the receipt expires for apps purchased through
     * the Volume Purchase Program,
     * in the Pacific Time zone.
     */
    @JsonProperty("expiration_date_pst")
    private final String expirationDatePst;
    /**
     * An array that contains the in-app purchase receipt fields
     * for all in-app purchase transactions.
     */
    @JsonProperty("in_app")
    private final ReceiptInApp[] inApp;
    /**
     * The version of the app that the user originally purchased.
     * This value does not change,
     * and corresponds to the value of CFBundleVersion (in iOS)
     * or CFBundleShortVersionString (in macOS) in
     * the Info.plist file of the original purchase.
     * In the sandbox environment,
     * the value is always "1.0".
     */
    @JsonProperty("original_application_version")
    private final String originalApplicationVersion;
    /**
     * The time of the original app purchase,
     * in a date-time format similar to ISO 8601.
     */
    @JsonProperty("original_purchase_date")
    private final String originalPurchaseDate;
    /**
     * The time of the original app purchase,
     * in UNIX epoch time format,
     * in milliseconds.
     * Use this time format for processing dates.
     */
    @JsonProperty("original_purchase_date_ms")
    private final String originalPurchaseDateMs;
    /**
     * The time of the original app purchase,
     * in the Pacific Time zone.
     */
    @JsonProperty("original_purchase_date_pst")
    private final String originalPurchaseDatePst;
    /**
     * The time the user ordered the app available for pre-order,
     * in a date-time format similar to ISO 8601.
     */
    @JsonProperty("preorder_date")
    private final String preorderDate;
    /**
     * The time the user ordered the app available for pre-order,
     * in UNIX epoch time format,
     * in milliseconds.
     * This field is only present if the user pre-orders the app.
     * Use this time format for processing dates.
     */
    @JsonProperty("preorder_date_ms")
    private final String preorderDateMs;
    /**
     * The time the user ordered the app available for pre-order,
     * in the Pacific Time zone.
     */
    @JsonProperty("preorder_date_pst")
    private final String preorderDatePst;
    /**
     * The time the App Store generated the receipt,
     * in a date-time format similar to ISO 8601.
     */
    @JsonProperty("receipt_creation_date")
    private final String receiptCreationDate;
    /**
     * The time the App Store generated the receipt,
     * in UNIX epoch time format,
     * in milliseconds.
     * Use this time format for processing dates.
     * This value does not change.
     */
    @JsonProperty("receipt_creation_date_ms")
    private final String receiptCreationDateMs;
    /**
     * The time the App Store generated the receipt,
     * in the Pacific Time zone.
     */
    @JsonProperty("receipt_creation_date_pst")
    private final String receiptCreationDatePst;
    /**
     * The type of receipt generated.
     * The value corresponds to the environment in which the app
     * or VPP purchase was made.
     * Possible values: Production,
     * ProductionVPP,
     * ProductionSandbox,
     * ProductionVPPSandbox
     */
    @JsonProperty("receipt_type")
    private final String receiptType;
    /**
     * The time the request to the verifyReceipt endpoint was processed
     * and the response was generated,
     * in a date-time format similar to ISO 8601.
     */
    @JsonProperty("request_date")
    private final String requestDate;
    /**
     * The time the request to the verifyReceipt endpoint was processed
     * and the response was generated,
     * in UNIX epoch time format,
     * in milliseconds.
     * Use this time format for processing dates.
     */
    @JsonProperty("request_date_ms")
    private final String requestDateMs;
    /**
     * The time the request to the verifyReceipt endpoint was processed
     * and the response was generated,
     * in the Pacific Time zone.
     */
    @JsonProperty("request_date_pst")
    private final String requestDatePst;
    /**
     * An arbitrary number that identifies a revision of your app.
     * In the sandbox,
     * this key's value is “0”.
     */
    @JsonProperty("version_external_identifier")
    private final Integer versionExternalIdentifier;
}
